# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']

jobs:

  stopdocker:
    runs-on: ubuntu-latest
    steps:
      - name: StopDocker
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker stop galaga-app
            sudo docker stop galaga-db
            sudo docker stop galaga-pgadmin
            sudo docker rm galaga-app
            sudo docker rm galaga-db
            sudo docker rm galaga-pgadmin

  rmdir:
    runs-on: ubuntu-latest
    steps:
      - name: Rmdir
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo rm -r /home/admin/app

  mkdir:
    runs-on: ubuntu-latest
    steps:
      - name: MakeDir
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            mkdir /home/admin/app
        

  copy-and-run:
    needs: mkdir
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: CopyFiles
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "./*"
          target: "/home/admin/app"

      - name: TouchFile
        uses: appleboy/ssh-action@v0.1.10
        env:
          CLIENT_PORT: ${{ secrets.CLIENT_PORT }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          API_ADDRESS: ${{ secrets.API_ADDRESS }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: CLIENT_PORT,SERVER_PORT,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,POSTGRES_PORT,API_ADDRESS
          script: |
            printf "CLIENT_PORT=$CLIENT_PORT\nSERVER_PORT=$SERVER_PORT\nPOSTGRES_USER=$POSTGRES_USER\nPOSTGRES_PASSWORD=$POSTGRES_PASSWORD\nPOSTGRES_DB=$POSTGRES_DB\nPOSTGRES_PORT=$POSTGRES_PORT\nAPI_ADDRESS=$API_ADDRESS\n" > /home/admin/app/.env    
  
      - name: Compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          command_timeout: 60m
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd /home/admin/app
            sudo docker-compose up -d


      