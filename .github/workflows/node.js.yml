# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Login (Yandex Cloud)
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.AUTHORIZED_KEY }} 
      
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crp7mrj2ebt9tskfom26
          CR_REPOSITORY: registry
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
      
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          CR_REGISTRY: crp7mrj2ebt9tskfom26
          CR_REPOSITORY: registry
          IMAGE_TAG: ${{ github.sha }}
        with:
          yc-sa-json-credentials: ${{ secrets.AUTHORIZED_KEY }}
          folder-id: b1gp461vtc5b867uco3d
          vm-name: front-main
          vm-service-account-id: aje5ambrallm95kaaevf
          vm-cores: 2
          vm-memory: 2Gb
          vm-core-fraction: 100
          vm-subnet-id: e2lvfatmnkdm3aiehqo4
          docker-compose-path: './docker-compose.yaml'
        
